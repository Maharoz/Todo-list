{"version":3,"sources":["components/text-bar.jsx","data.js","components/singleTodoItem.jsx","components/todoItems.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Textbar","formOnSubmit","e","preventDefault","data","state","props","handleSubmitData","setState","isDataEmpty","this","onSubmit","className","type","style","borderColor","borderRadius","aria-describedby","value","onChange","target","placeholder","id","Component","title","isComplete","SingleTodoItem","item","handleComplete","handleRemove","color","onClick","marginRight","TodoItems","items","length","map","index","key","FooterItem","aria-hidden","href","App","toDoItems","todo","filter","alt","src","logo","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6bfbd49e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Textbar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: \"\",\r\n      isDataEmpty: false\r\n    };\r\n  }\r\n\r\n  formOnSubmit=(e)=> {\r\n    e.preventDefault();\r\n    const { data } = this.state;\r\n    !data ? this.setState({ isDataEmpty: true }) : this.props.handleSubmitData(data);\r\n    this.setState({ data: '' });\r\n  }\r\n  render() {\r\n    const { data, isDataEmpty } = this.state;\r\n    return (\r\n     \r\n      <form onSubmit={this.formOnSubmit} className=\"search-form\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={isDataEmpty?{borderColor: 'Red',borderRadius: '8px' }:null}\r\n            aria-describedby=\"basic-addon2\"\r\n            value={data}\r\n            onChange={({ target: { value } }) =>\r\n              this.setState({ data: value, isDataEmpty: false })\r\n            }\r\n            placeholder={\r\n              isDataEmpty\r\n                ? \"Please enter something...\"\r\n                : \"Write something...\"\r\n            }\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button className=\"input-group-text hover-cursor\" id=\"basic-addon2\">\r\n              <i className=\"fa fa-plus-circle fa-2x\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Textbar;\r\n","export default [\r\n    {title: 'make a type specimen book. It has survived not only', isComplete: true},\r\n    {title: 'Lorem Ipsum is simply dummy text of the ', isComplete: false},\r\n    {title: 'Contrary to popular not simply random text', isComplete: false},\r\n    {title: 'The standard chunk of Lorem Ipsum used since the', isComplete: true}\r\n  ]\r\n  ","import React from \"react\";\r\n\r\nconst SingleTodoItem = ({ item, handleComplete, handleRemove }) => {\r\n  return (\r\n    <li className=\"list-group-item\" style={item.isComplete?{color: 'Green' }:{color: 'Black' }} >\r\n      <span onClick={() => handleComplete(item)} style={{ marginRight: 10 }}>\r\n        <i\r\n          className={\r\n            item.isComplete\r\n              ? \"fa fa-check-circle-o fa-lg done\"\r\n              : \"fa fa-circle-thin fa-lg\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      {item.title}\r\n      <span\r\n        className=\"hover-cursor text-danger pull-right\"\r\n        onClick={() => handleRemove(item)}\r\n      >\r\n        <i className=\"fa fa-trash-o fa-lg\"></i>\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SingleTodoItem;\r\n","import React from \"react\";\r\nimport SingleTodoItem from \"./singleTodoItem\";\r\n\r\nconst TodoItems = ({ items, handleComplete, handleRemove }) => {\r\n  const item =\r\n    items.length === 0 ? (\r\n        <li className=\" noData list-group-item\">No Data Available</li>\r\n    ) : (\r\n      items.map((item, index) => (\r\n        <SingleTodoItem\r\n          key={index}\r\n          item={item}\r\n          handleComplete={handleComplete}\r\n          handleRemove={handleRemove}\r\n        />\r\n      ))\r\n    );\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">{item}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\n\r\nconst FooterItem = () => {\r\n  return (\r\n    <footer className=\"footer-area\">\r\n      <p>\r\n        Developed with{\" \"}\r\n        <span style={{ color: \"Red\" }}>\r\n          <i className=\"fa fa-heart fa-lg\" aria-hidden=\"true\"></i>\r\n        </span>{\" \"}\r\n        by{\" \"}\r\n        <span>\r\n          <a href=\"https://github.com/Maharoz\">Maharoz Alam</a> using React JS\r\n        </span>\r\n      </p>\r\n      <p>\r\n        <a href=\"https://github.com/Maharoz/Todo-list\">Source Code</a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\nexport default FooterItem;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport TextBar from \"./components/text-bar\";\nimport \"./App.css\";\nimport data from \"./data\";\nimport TodoItems from \"./components/todoItems\";\nimport FooterItem from \"./components/footer\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toDoItems: data\n    };\n  }\n\n  handleSubmitData = data => {\n    let toDoItems = this.state.toDoItems;\n    toDoItems = [{ title: data, isComplete: false }, ...toDoItems];\n    this.setState({ toDoItems });\n  };\n\n  handleComplete = data => {\n    let toDoItems = this.state.toDoItems;\n    toDoItems = toDoItems.map(todo =>\n      todo === data\n        ? todo.isComplete === true\n          ? { title: todo.title, isComplete: false }\n          : { title: todo.title, isComplete: true }\n        : todo\n    );\n    this.setState({ toDoItems });\n  };\n\n  handleRemove = data => {\n    let toDoItems = this.state.toDoItems;\n    toDoItems = toDoItems.filter(todo => todo !== data);\n    this.setState({ toDoItems });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <div className=\"text-center header-margin\">\n                <img alt=\"React\" src={logo} />\n                <h2>To Do List App</h2>\n              </div>\n              <TextBar handleSubmitData={this.handleSubmitData}></TextBar>\n              <TodoItems\n                items={this.state.toDoItems}\n                handleComplete={this.handleComplete}\n                handleRemove={this.handleRemove}\n              />\n              <div className=\"text-center\" style={{marginTop:20,}}>\n                <FooterItem />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}